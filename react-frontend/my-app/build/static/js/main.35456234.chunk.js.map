{"version":3,"sources":["components/sampleObject.js","config.js","components/resultTable.js","components/input.js","App.js","serviceWorker.js","index.js"],"names":["sampleObject","currency","date","quotes","time","price","config","API","SAVE_API_URL","GET_API_KEY_URL","TableComponent","props","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","results","currencyData","react_default","a","createElement","className","width","colSpan","buyValue","sellValue","buyTime","sellTime","profit","Component","Input","_this","handleEvent","e","jsonValid","jsObject","rel","setState","jsonInput","error","handleSubmit","fetch","method","headers","Content-Type","body","JSON","stringify","state","then","response","console","log","json","catch","data","Grid_default","item","xs","id","es","locale","en","placeholder","height","onChange","Button_default","variant","size","onClick","color","disabled","container","spacing","map","crypto","index","resultTable","App","direction","justify","alignItems","input","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.35456234.chunk.js","sourcesContent":["export default {\n    sampleObject:\n    [\n        {\n        \"currency\":\"BTC\",\n        \"date\": \"20180507\",\n        \"quotes\":\n        [{\"time\":\"0915\", \"price\":\"34.98\"},\n        {\"time\":\"1045\", \"price\":\"36.13\"},\n        {\"time\":\"1230\", \"price\":\"37.01\"},\n        {\"time\":\"1400\", \"price\":\"35.98\"},\n        {\"time\":\"1530\", \"price\":\"33.56\"}]\n        },\n        {\n        \"currency\":\"ETC\",\n        \"date\": \"20180507\",\n        \"quotes\":\n        [{\"time\":\"0900\", \"price\":\"1.45\"},\n        {\"time\":\"1030\", \"price\":\"1.87\"},\n        {\"time\":\"1245\", \"price\":\"1.55\"},\n        {\"time\":\"1515\", \"price\":\"2.01\"},\n        {\"time\":\"1700\", \"price\":\"2.15\"}]\n        },\n        {\n        \"currency\":\"LTC\",\n        \"date\": \"20180507\",\n        \"quotes\":\n        [{\"time\":\"0930\", \"price\":\"14.32\"},\n        {\"time\":\"1115\", \"price\":\"14.87\"},\n        {\"time\":\"1245\", \"price\":\"15.03\"},\n        {\"time\":\"1400\", \"price\":\"14.76\"},\n        {\"time\":\"1700\", \"price\":\"14.15\"}]\n        }\n        ]\n    }","export default {\n    API : {\n        \"SAVE_API_URL\" : 'https://bzwpkg5vyh.execute-api.ap-southeast-2.amazonaws.com/V1/savecryptodata',\n        \"GET_API_KEY_URL\" : 'https://bzwpkg5vyh.execute-api.ap-southeast-2.amazonaws.com/V1/crypto',\n    }\n}","import React, { Component } from 'react';\n\nclass TableComponent extends Component{\n    constructor(props) {\n    super(props);\n    }\n\n    render() {\n      var results = this.props.currencyData;\n\n      // Decorate with Bootstrap CSS\n      return (\n      \n      <table className=\"table table-bordered table-hover\" width=\"100%\">\n         <tbody>\n             <tr><td colSpan=\"2\">{results.date}</td></tr>\n         <tr><th colSpan=\"2\">{results.currency}</th></tr>\n         <tr><th>Buy</th><th>Sell</th></tr>\n         <tr>\n            <td>${results.buyValue}</td>\n            <td>${results.sellValue}</td>\n         </tr>\n         <tr>\n            <td>{results.buyTime}</td>\n            <td>{results.sellTime}</td>\n         </tr>\n         <tr>\n             <td colSpan=\"2\"> Profit: ${results.profit}</td>\n        </tr></tbody>\n        </table>) \n    }\n}\n  \n export default TableComponent;","import React, { Component } from 'react';\nimport JSONInput from 'react-json-editor-ajrm';\nimport en from 'react-json-editor-ajrm/locale/en';\nimport sampleObject from '../components/sampleObject';\nimport Button from '@material-ui/core/Button';\nimport config from '../config'\nimport TableComponent from './resultTable';\nimport Grid from '@material-ui/core/Grid';\n\n\nclass Input extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            jsonInput: sampleObject,\n            jsonValid: true,\n            results: []\n        };\n    }\n\n    handleEvent = e => {\n        let jsonValid = true;\n        if (e.jsObject) {\n            const rel = e.jsObject;\n            this.setState({\n                jsonInput: rel,\n                jsonValid: jsonValid\n            });\n        } else {\n           \n            if (e.error) {\n                jsonValid = false;\n            }\n            this.setState({\n                jsonValid: jsonValid\n            });\n        }\n    }\n\n    handleSubmit = e => {\n        var results = [];\n        fetch(config.API.SAVE_API_URL, {\n            method: 'PUT',\n            headers: {\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify(this.state.jsonInput.sampleObject)\n        }).then((response) => {\n            console.log(\"Success\");\n            return response.json();\n        }).catch((error) => {\n            console.log('error --->' + error);\n        }).then((data) => {\n            if (data) {\n                results = data.body;\n                this.setState({\n                    results: results\n                });\n            }\n\n        });\n    }\n\n\n    render() {\n        return (\n            <div>\n                <p>Welcome to the Crypto App.</p>\n                <p>Please enter the input in below json format and click on Submit.</p>\n               \n\n                <Grid item xs={50} >\n                        <div className=\"content\" id=\"content\">\n                            <JSONInput\n                                id='a_unique_id'\n                                locale={en}\n                                placeholder={sampleObject}\n                                height='450px'\n                                width='550px'\n                                onChange={this.handleEvent}\n                            //   theme='light_mitsuketa_tribute'\n\n                            />\n                        </div>\n\n                        <div className=\"col-md-offset-1 col-md-12 col-md-push-4 content buttonCenter\" id=\"content\">\n                            <Button variant=\"contained\" size=\"medium\" onClick={this.handleSubmit} color=\"primary\" disabled={!this.state.jsonValid}>\n                                Submit\n                    </Button>\n                        </div>\n                </Grid>\n                <Grid container spacing={50}>\n                    {this.state.results.map((crypto, index) => (\n                        <Grid item >\n                            <TableComponent currencyData={crypto}></TableComponent>\n                        </Grid>\n                    ))}\n                </Grid>\n            </div>\n        )\n    }\n}\n\n\n\nexport default Input;\n","import React, { Component } from 'react';\nimport './App.css';\nimport Input from './components/input';\nimport Grid from '@material-ui/core/Grid';\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"App au-body\">\n        <Grid\n          container\n          direction=\"row\"\n          justify=\"center\"\n          alignItems=\"center\"\n          spacing={50}\n        >\n          <Input></Input>\n        </Grid>      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}